version: '3.8'

services:
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
      - NEXT_PUBLIC_AUTH_URL=http://auth:3001
      - NEXT_PUBLIC_RECORDING_URL=http://recording:3002

  auth:
    build:
      context: .
      dockerfile: ./services/auth/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/extempored_auth
      - JWT_SECRET=your-jwt-secret
    depends_on:
      - db

  recording:
    build:
      context: .
      dockerfile: ./services/recording/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/extempored_recording
      - GOOGLE_CLOUD_PROJECT=your-project-id
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials.json
    volumes:
      - ./google-credentials.json:/app/google-credentials.json:ro
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=extempored_auth,extempored_recording
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro

volumes:
  postgres_data: 